import type { Metadata } from "next";
import { Inter } from "next/font/google";
import { Flowbite } from "flowbite-react";

import CorbadoProvider from "@/utils/corbado/Provider";
import FlowbiteTheme from "./theme";
import { SupabaseSessionProvider } from "@/components/Context/SupabaseSessionProvider";

import "./globals.css";
import { createClient } from "@/utils/supabase/server";
import {
  AuthSession,
  Session,
  User,
  UserResponse,
} from "@supabase/supabase-js";
import { UserClientContextProvider } from "./components/Context/UserClientContext";

const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const supabase = createClient();
  const { data: userData } = await supabase.auth.getUser();

  const response = await fetch(
    `http://localhost:3000/api/user/${userData?.user?.id}`,
    {
      method: "GET",
      headers: {
        "Content-Type": "application/json",
      },
      next: {
        tags: ["user_info"],
        revalidate: 0,
      },
    }
  );

  if (!response.ok) {
    throw new Error(`Failed to fetch user ${userData?.user?.id}`);
  }

  const data = await response.json();

  return (
    <html lang="en">
      <CorbadoProvider>
        <Flowbite theme={{ theme: FlowbiteTheme }}>
          <SupabaseSessionProvider
            userInfo={data}
            user={userData?.user as User}
          >
            <UserClientContextProvider>
              <body className={inter.className}>
                <main className="bg-gray-200">{children}</main>
              </body>
            </UserClientContextProvider>
          </SupabaseSessionProvider>
        </Flowbite>
      </CorbadoProvider>
    </html>
  );
}
